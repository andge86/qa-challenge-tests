name: Models API Tests

on:
  workflow_dispatch:
    inputs:
      run:
        description: 'Will run tests against certain environment'
        required: true
        default: local
        options:
          - local
          - remote

#  schedule:
#      - cron: "0 0 * * *"

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        if: ${{ github.event.inputs.run == 'remote' }}

      - name: Clone TEST repo
        uses: actions/checkout@v4
        if: ${{ github.event.inputs.run == 'local' }}

      - name: Clone remote DEV repo
        uses: actions/checkout@v4
        if: ${{ github.event.inputs.run == 'local' }}
        with:
          repository: openinnovationai/recruiting-qa-challenge
          path: recruiting-qa-challenge

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Set up Python
        uses: actions/setup-python@v4
        if: ${{ github.event.inputs.run == 'local' }}
        with:
         python-version: '3.8'

      - name: Install Python dependencies and Run Python server script
        if: ${{ github.event.inputs.run == 'local' }}
        run: |
          cd recruiting-qa-challenge
          pip install -r requirements.txt
          fastapi dev application.py &
          sleep 100 &&
          cd .. &&
          ./mvnw clean test

      - name: Run API Tests
        if: ${{ github.event.inputs.run == 'remote' }}
        env:
          API_SERVER: "test.openinnovationai.com"
          API_PORT: "8000"
        run: ./mvnw clean test

      - name: Get Allure history
        uses: actions/checkout@v4
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Create Allure Report
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history